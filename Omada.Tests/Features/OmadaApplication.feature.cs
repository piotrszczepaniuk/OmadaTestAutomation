// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Omada.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OmadaApplication")]
    [NUnit.Framework.CategoryAttribute("Omada")]
    public partial class OmadaApplicationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OmadaApplication.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OmadaApplication", "  In order to find information about Omada business\r\n  As a business client\r\n  I " +
                    "want to make sure that basic website functionality works", ProgrammingLanguage.CSharp, new string[] {
                        "Omada"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_001_Open_Page")]
        public virtual void SmokeTest_001_Open_Page()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_001_Open_Page", null, ((string[])(null)));
#line 7
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.When("I click on element having \"xpath\" \"//span[@class=\'cookiebar__button button--varia" +
                    "nt1\']\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
    testRunner.Then("I should see page title as \"Identity Management | Omada Identity\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
    testRunner.Then("element having \"id\" \"content\" should be present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_002_Search")]
        public virtual void SmokeTest_002_Search()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_002_Search", null, ((string[])(null)));
#line 13
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
    testRunner.When("I enter \"gartner\" into input field having \"css\" \"form.header__search input\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.When("I submit element having \"css\" \"form.header__search input\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
    testRunner.Then("Count of elements having \"xpath\" \"//section[@class=\'search-results__item\']\" shoul" +
                    "d be > 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
    testRunner.Then("Count of elements having \"xpath\" \"//section[@class=\'search-results__item\']\" shoul" +
                    "d be <= 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_003_Redirect")]
        public virtual void SmokeTest_003_Redirect()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_003_Redirect", null, ((string[])(null)));
#line 21
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 22
    testRunner.When("I navigate to \"https://www.omada.net/en-us/search?q=gartner\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
    testRunner.When("I click on link having partial text \"Gartner IAM Summit 2016 - London\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
    testRunner.Then("I should see page title as \"Omada is a sponser at the Gartner IAM Summit 2016 in " +
                    "London, UK.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
    testRunner.Then("element having \"xpath\" \"//section/div/p\" should have partial text as \"Gartner IAM" +
                    " Summit 2016 in London\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_004_Navigation_To_News")]
        public virtual void SmokeTest_004_Navigation_To_News()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_004_Navigation_To_News", null, ((string[])(null)));
#line 29
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.When("I click on link having text \"More...\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
    testRunner.When("I click on link having text \"News & Events\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
    testRunner.When("I click on link having text \"News\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
    testRunner.Then("I should see page title as \"News | Omada Identity Suite\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_005_Go_To_Home_Page")]
        public virtual void SmokeTest_005_Go_To_Home_Page()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_005_Go_To_Home_Page", null, ((string[])(null)));
#line 38
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
    testRunner.When("I scroll to \"end\" of page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
    testRunner.When("I click on link having text \"Contact\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.When("I click on element having \"xpath\" \"//span[@class=\'tabmenu__menu-item \' and contai" +
                    "ns(text(),\'U.S. West\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
    testRunner.Then("element having \"css\" \"span.tabmenu__menu-item.selected\" should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
    testRunner.When("I hover over element having \"xpath\" \"//span[@class=\'tabmenu__menu-item\' and conta" +
                    "ins(text(),\'Denmark\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
    testRunner.When("I hover over element having \"xpath\" \"//span[@class=\'tabmenu__menu-item\' and conta" +
                    "ins(text(),\'U.S. East\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
    testRunner.When("I hover over element having \"xpath\" \"//span[@class=\'tabmenu__menu-item selected\' " +
                    "and contains(text(),\'U.S. West\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
    testRunner.When("I hover over element having \"xpath\" \"//span[@class=\'tabmenu__menu-item\' and conta" +
                    "ins(text(),\'Germany\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
    testRunner.When("I hover over element having \"xpath\" \"//span[@class=\'tabmenu__menu-item\' and conta" +
                    "ins(text(),\'UK\')]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
    testRunner.Then("I take screenshot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_006_007_Open_Read_Privacy_Policy_Close_Cookies_And_Private_Policy")]
        public virtual void SmokeTest_006_007_Open_Read_Privacy_Policy_Close_Cookies_And_Private_Policy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_006_007_Open_Read_Privacy_Policy_Close_Cookies_And_Private_Policy", null, ((string[])(null)));
#line 58
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 59
    testRunner.When("I clear all cookies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
    testRunner.When("I scroll to \"end\" of page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.When("I open link having text \"Read Privacy Policy\" in new tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
    testRunner.Then("I should see page title as \"Omada | Processing of Personal Data\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
    testRunner.Then("element having \"xpath\" \"//section/h1\" should have text as \"WEBSITE PRIVACY POLICY" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
    testRunner.When("I scroll to \"end\" of page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
    testRunner.When("I click on element having \"xpath\" \"//span[@class=\'cookiebar__button button--varia" +
                    "nt1\']\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.When("I switch to previous tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.When("I close new tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
    testRunner.Then("link having text \"Read Privacy Policy\" should not be present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SmokeTest_008_Download_Pdf")]
        public virtual void SmokeTest_008_Download_Pdf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SmokeTest_008_Download_Pdf", null, ((string[])(null)));
#line 72
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 73
    testRunner.When("I navigate to \"https://www.omada.net/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
    testRunner.When("I scroll to \"end\" of page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.When("I click on element having \"xpath\" \"//span[@class=\'cookiebar__button button--varia" +
                    "nt1\']\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
    testRunner.When("I click on link having text \"Cases\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
    testRunner.When("I click on link having text \"Download PDF\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.When("I scroll to \"end\" of page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.When("I switch to frame having \"css\" \"iframe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.When("I enter \"John\" into input field having \"xpath\" \"//input[@id=(//label[contains(tex" +
                    "t(),\'First Name\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.When("I enter \"Smith\" into input field having \"xpath\" \"//input[@id=(//label[contains(te" +
                    "xt(),\'Last Name\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.When("I enter \"Engineer\" into input field having \"xpath\" \"//input[@id=(//label[contains" +
                    "(text(),\'Title\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.When("I enter \"Google\" into input field having \"xpath\" \"//input[@id=(//label[contains(t" +
                    "ext(),\'Company\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.When("I select \"Poland\" option by \"text\" from dropdown having \"xpath\" \"//select[@id=(//" +
                    "label[contains(text(),\'Country\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.When("I enter \"johnsmith@google.com\" into input field having \"xpath\" \"//input[@id=(//la" +
                    "bel[contains(text(),\'Email\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.When("I enter \"511111111\" into input field having \"xpath\" \"//input[@id=(//label[contain" +
                    "s(text(),\'Phone\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
    testRunner.When("I select \"+10000\" option by \"text\" from dropdown having \"xpath\" \"//select[@id=(//" +
                    "label[contains(text(),\'Number of employees\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.When("I select \"Manager\" option by \"text\" from dropdown having \"xpath\" \"//select[@id=(/" +
                    "/label[contains(text(),\'Level\')]/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.When("I select radio button having \"xpath\" \"//input[@id=(//label[text()=\'Yes\']/@for)]\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.When("I switch to frame having \"css\" \"iframe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.When("I click on element having \"css\" \"div.recaptcha-checkbox-checkmark\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.Given("I wait 30 secs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("I switch to main content", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.When("I switch to frame having \"css\" \"iframe\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.When("I click on element having \"css\" \"p.submit input\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
